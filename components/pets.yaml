components:
  schemas:
    Pet:
      type: object
      discriminator:
        propertyName: petType
      properties:
        id: 
          type: integer
          format: int64
        name:
          type: string
        petType:
          type: string
      required:
      - name
      - petType
    Cat:  ## "Cat" will be used as the discriminator value
      description: A representation of a cat
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            huntingSkill:
              type: string
              description: The measured skill for hunting
              enum:
              - clueless
              - lazy
              - adventurous
              - aggressive
          required:
          - huntingSkill
    Dog:  ## "Dog" will be used as the discriminator value
      description: A representation of a dog
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            packSize:
              type: integer
              format: int32
              description: the size of the pack the dog is from
              default: 0
              minimum: 0
          required:
          - packSize
    PetType:
      oneOf:
        - $ref: '#/components/schemas/Cat'
        - $ref: '#/components/schemas/Dog'
      discriminator:
        propertyName: petType
  examples:
    Dog:
      summary: An example of the Dog object
      description: The dog a child of a pet
      value: {"id": 100, "name": "Fluffy", "petType": "Dog", "packSize": 4 }
    Cat:
      summary: An example of the cat
      value: {"name": "Tabitha", "petType": "Cat", "huntingSkill": "lazy"}
